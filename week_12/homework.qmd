---
title: "Week 12 - Homework"
format: 
  html:
    embed-resources: true
editor: visual

author: "David Gonzalez Chavez"

execute:
  echo: true
  warning: false
  message: false
  freeze: auto
---

```{r}
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(gssr)
library(sqldf)

theme_set(theme_light())

```

# Data

The data for this homework assignment comes from the 2022 GSS.

```{r}

gss2022 <- gss_get_yr(year = 2022) |> # get 2022 GSS data
  haven::zap_labels()                 # remove labels

```

# Linear Regression #1

The analysis will be for hours to relax by sex and happiness.

```{r}

relax <- gss2022 |> 
  select(sex, happy, hrsrelax) |> # get variables
  drop_na() |> 
  mutate(male = if_else(sex == 1, 1, 0)) |> 
  mutate(sex_label = if_else(sex == 1, "Male", "Female")) |> 
  mutate(veryhappy = if_else(happy == 1, 1, 0)) |> 
  mutate(veryhappy_label = if_else(happy == 1, "Very Happy", "Not Very Happy"))

relax_table <- relax |> 
  group_by(sex_label, veryhappy_label) |> 
  summarize(mean = round(mean(hrsrelax),2))

relax_table

```

## Saturated Model by Hand

```{r}

relax_alpha = sqldf('SELECT AVG(hrsrelax) FROM relax WHERE male == 0 AND veryhappy == 0') #tired of wrangling dplyr to do what I want so relying on my trusty SQL

relax_b1 = sqldf('SELECT AVG(hrsrelax) FROM relax WHERE male == 0 AND veryhappy == 1') - relax_alpha

relax_b2 = sqldf('SELECT AVG(hrsrelax) FROM relax WHERE male == 1 AND veryhappy == 0') -relax_alpha

relax_b3 = sqldf('SELECT AVG(hrsrelax) FROM relax WHERE male == 1 AND veryhappy == 1') - relax_b1 - relax_b2 - relax_alpha

```

Alpha represents the mean number of hours to relax when male is 0 (i.e., respondent is female) and veryhappy is 0 (i.e., respondent is not very happy), and it is `{r} round(relax_alpha, 2)`. 

Beta 1 is where male is 0 and veryhappy is 1 (i.e., respondent is very happy), and it is `{r} round(relax_b1, 2)`; it represents the difference in mean number of hours to relax for a female who is very happy compared to a female who is not very happy.

Beta 2 is where male is 1 (i.e., respondent is male) and veryhappy is 0, and it is `{r} round(relax_b2, 2)`; it represents the difference in mean number of hours to relax for a male who is not very happy compared to a female who is not very happy.

Beta 3 is where male is 1 and veryhappy is 1, and it is `{r} round(relax_b3, 2)`. It represents the additional difference (in addition to beta 1 and beta 2) in mean number of hours to relax for a male who is very happy compared to a woman who is not very happy.

## Saturated Model by Computer

```{r}

sm_relax = lm(hrsrelax ~ male * veryhappy,
              data = relax)

summary(sm_relax)

```

## Restricted Model by Computer

```{r}

rm_relax = lm(hrsrelax ~ male + veryhappy,
              data = relax)

summary(rm_relax)

```
The restricted model assumes that the impacts of being male or being very happy on mean number of hours to relax are independent from one another. 

Alpha represents the mean number of hours to relax for someone who is neither male nor very happy, and is `{r} round(rm_relax$coefficients[1],2)`.

Beta 1 represents the difference in mean number of hours to relax for someone male compared to someone who is not, and is `{r} round(rm_relax$coefficients[2],2)`.

Beta 2 represents the difference in mean number of hours to relax for someone who is very happy compared to someone who is not, and is `{r} round(rm_relax$coefficients[3],2)`.


## Comparing Saturated and Restricted Model

```{r}

anova(sm_relax, rm_relax, test = "Chisq")

```
The anova does not yield a chi-square value under .05, which means we should use the restricted model as the saturated model does not predict values with significantly higher likelihoods compared to it.





# Linear Regression #2

The analysis will be for mean weight by sex and happiness.

```{r}

weight <- gss2022 |> 
  select(sex, happy, weight) |> # get variables
  drop_na() |> 
  mutate(male = if_else(sex == 1, 1, 0)) |> 
  mutate(sex_label = if_else(sex == 1, "Male", "Female")) |> 
  mutate(veryhappy = if_else(happy == 1, 1, 0)) |> 
  mutate(veryhappy_label = if_else(happy == 1, "Very Happy", "Not Very Happy"))

weight_table <- weight |> 
  group_by(sex_label, veryhappy_label) |> 
  summarize(mean = round(mean(weight),2))

weight_table

```

## Saturated Model by Hand

```{r}

weight_alpha = sqldf('SELECT AVG(weight) FROM weight WHERE male == 0 AND veryhappy == 0')

weight_b1 = sqldf('SELECT AVG(weight) FROM weight WHERE male == 0 AND veryhappy == 1') - weight_alpha

weight_b2 = sqldf('SELECT AVG(weight) FROM weight WHERE male == 1 AND veryhappy == 0') -weight_alpha

weight_b3 = sqldf('SELECT AVG(weight) FROM weight WHERE male == 1 AND veryhappy == 1') - weight_b1 - weight_b2 - weight_alpha

```

Alpha represents the mean weight when male is 0 (i.e., respondent is female) and veryhappy is 0 (i.e., respondent is not very happy), and it is `{r} round(weight_alpha, 2)`. 

Beta 1 is where male is 0 and veryhappy is 1 (i.e., respondent is very happy), and it is `{r} round(weight_b1, 2)`; it represents the difference in mean weight for a female who is very happy compared to a female who is not very happy.

Beta 2 is where male is 1 (i.e., respondent is male) and veryhappy is 0, and it is `{r} round(weight_b2, 2)`; it represents the difference in mean weight for a male who is not very happy compared to a female who is not very happy.

Beta 3 is where male is 1 and veryhappy is 1, and it is `{r} round(weight_b3, 2)`. It represents the additional difference (in addition to beta 1 and beta 2) in mean weight for a male who is very happy compared to a woman who is not very happy.

## Saturated Model by Computer

```{r}

sm_weight = lm(weight ~ male * veryhappy,
              data = weight)

summary(sm_weight)

```

## Restricted Model by Computer

```{r}

rm_weight = lm(weight ~ male + veryhappy,
              data = weight)

summary(rm_weight)

```
The restricted model assumes that the impacts of being male or being very happy on mean weight are independent from one another. 

Alpha represents the mean weight for someone who is neither male nor very happy, and is `{r} round(rm_weight$coefficients[1],2)`.

Beta 1 represents the difference in mean weight for someone male compared to someone who is not, and is `{r} round(rm_weight$coefficients[2],2)`.

Beta 2 represents the difference in mean weight for someone who is very happy compared to someone who is not, and is `{r} round(rm_weight$coefficients[3],2)`.


## Comparing Saturated and Restricted Model

```{r}

anova(sm_weight, rm_weight, test = "Chisq")

```
The anova does not yield a chi-square value under .05, which means we should use the restricted model as the saturated model does not predict values with significantly higher likelihoods compared to it.


# Logit Regression #1

The analysis will be for likelihood of voting for Biden by sex and happiness.

```{r}

biden <- gss2022 |> 
  select(sex, happy, pres20) |> # get variables
  drop_na() |> 
  mutate(male = if_else(sex == 1, 1, 0)) |> 
  mutate(sex_label = if_else(sex == 1, "Male", "Female")) |> 
  mutate(veryhappy = if_else(happy == 1, 1, 0)) |> 
  mutate(veryhappy_label = if_else(happy == 1, "Very Happy", "Not Very Happy")) |> 
  mutate(biden = if_else(pres20 == 1, 1, 0))

biden_table <- biden |> 
  group_by(sex_label, veryhappy_label) |> 
  summarize(log_odds = log(mean(biden) / (1 - mean(biden))))

biden_table

```

## Saturated Model by Hand

```{r}

biden_alpha = log(sqldf('SELECT AVG(biden) FROM biden WHERE male == 0 AND veryhappy == 0') / (1 - sqldf('SELECT AVG(biden) FROM biden WHERE male == 0 AND veryhappy == 0'))) # log odds

biden_b1 = log(sqldf('SELECT AVG(biden) FROM biden WHERE male == 0 AND veryhappy == 1') / (1 - sqldf('SELECT AVG(biden) FROM biden WHERE male == 0 AND veryhappy == 1'))) - biden_alpha

biden_b2 = log(sqldf('SELECT AVG(biden) FROM biden WHERE male == 1 AND veryhappy == 0') / (1 - sqldf('SELECT AVG(biden) FROM biden WHERE male == 1 AND veryhappy == 0'))) - biden_alpha

biden_b3 = log(sqldf('SELECT AVG(biden) FROM biden WHERE male == 1 AND veryhappy == 1') / (1 - sqldf('SELECT AVG(biden) FROM biden WHERE male == 1 AND veryhappy == 1'))) - biden_b1 - biden_b2 - biden_alpha

```

Alpha represents the log odds of voting for Biden when male is 0 (i.e., respondent is female) and veryhappy is 0 (i.e., respondent is not very happy), and it is `{r} round(biden_alpha, 2)`. 

Beta 1 is where male is 0 and veryhappy is 1 (i.e., respondent is very happy), and it is `{r} round(biden_b1, 2)`; it represents the difference in log odds of voting for Biden for a female who is very happy compared to a female who is not very happy.

Beta 2 is where male is 1 (i.e., respondent is male) and veryhappy is 0, and it is `{r} round(biden_b2, 2)`; it represents the difference in log odds of voting for Biden for a male who is not very happy compared to a female who is not very happy.

Beta 3 is where male is 1 and veryhappy is 1, and it is `{r} round(biden_b3, 2)`. It represents the additional difference (in addition to beta 1 and beta 2) in log odds of voting for Biden for a male who is very happy compared to a woman who is not very happy.

## Saturated Model by Computer

```{r}

sm_biden = glm(biden ~ male * veryhappy,
              data = biden,
              family = binomial(link = "logit"))

summary(sm_biden)

```

## Restricted Model by Computer

```{r}

rm_biden = glm(biden ~ male + veryhappy,
              data = biden,
              family = binomial(link = "logit"))

summary(rm_biden)

```

The restricted model assumes that the impacts of being male or being very happy on log odds of voting for Biden are independent from one another. 

Alpha represents the log odds of voting for Biden for someone who is neither male nor very happy, and is `{r} round(rm_weight$coefficients[1],2)`.

Beta 1 represents the difference in log odds of voting for Biden for someone male compared to someone who is not, and is `{r} round(rm_weight$coefficients[2],2)`.

Beta 2 represents the difference in log odds of voting for Biden for someone who is very happy compared to someone who is not, and is `{r} round(rm_weight$coefficients[3],2)`.


## Comparing Saturated and Restricted Model

```{r}

anova(sm_biden, rm_biden, test = "Chisq")

```
The anova does not yield a chi-square value under .05, which means we should use the restricted model as the saturated model does not predict values with significantly higher likelihoods compared to it.

# Logit Regression #2

The analysis will be for likelihood of being depressed by sex and happiness.

```{r}

depress <- gss2022 |> 
  select(sex, happy, depress) |> # get variables
  drop_na() |> 
  mutate(male = if_else(sex == 1, 1, 0)) |> 
  mutate(sex_label = if_else(sex == 1, "Male", "Female")) |> 
  mutate(veryhappy = if_else(happy == 1, 1, 0)) |> 
  mutate(veryhappy_label = if_else(happy == 1, "Very Happy", "Not Very Happy")) |> 
  mutate(depress = if_else(depress == 1, 1, 0))

depress_table <- depress |> 
  group_by(sex_label, veryhappy_label) |> 
  summarize(log_odds = log(mean(depress) / (1 - mean(depress))))

depress_table

```

## Saturated Model by Hand

```{r}

depress_alpha = log(sqldf('SELECT AVG(depress) FROM depress WHERE male == 0 AND veryhappy == 0') / (1 - sqldf('SELECT AVG(depress) FROM depress WHERE male == 0 AND veryhappy == 0'))) # log odds

depress_b1 = log(sqldf('SELECT AVG(depress) FROM depress WHERE male == 0 AND veryhappy == 1') / (1 - sqldf('SELECT AVG(depress) FROM depress WHERE male == 0 AND veryhappy == 1'))) - depress_alpha

depress_b2 = log(sqldf('SELECT AVG(depress) FROM depress WHERE male == 1 AND veryhappy == 0') / (1 - sqldf('SELECT AVG(depress) FROM depress WHERE male == 1 AND veryhappy == 0'))) - depress_alpha

depress_b3 = log(sqldf('SELECT AVG(depress) FROM depress WHERE male == 1 AND veryhappy == 1') / (1 - sqldf('SELECT AVG(depress) FROM depress WHERE male == 1 AND veryhappy == 1'))) - depress_b1 - depress_b2 - depress_alpha

```

Alpha represents the log odds of being depressed when male is 0 (i.e., respondent is female) and veryhappy is 0 (i.e., respondent is not very happy), and it is `{r} round(depress_alpha, 2)`. 

Beta 1 is where male is 0 and veryhappy is 1 (i.e., respondent is very happy), and it is `{r} round(depress_b1, 2)`; it represents the difference in log odds of being depressed for a female who is very happy compared to a female who is not very happy.

Beta 2 is where male is 1 (i.e., respondent is male) and veryhappy is 0, and it is `{r} round(depress_b2, 2)`; it represents the difference in log odds of being depressed for a male who is not very happy compared to a female who is not very happy.

Beta 3 is where male is 1 and veryhappy is 1, and it is `{r} round(depress_b3, 2)`. It represents the additional difference (in addition to beta 1 and beta 2) in log odds of being depressed for a male who is very happy compared to a woman who is not very happy.

## Saturated Model by Computer

```{r}

sm_depress = glm(depress ~ male * veryhappy,
              data = depress,
              family = binomial(link = "logit"))

summary(sm_depress)

```

## Restricted Model by Computer

```{r}

rm_depress = glm(depress ~ male + veryhappy,
              data = depress,
              family = binomial(link = "logit"))

summary(rm_depress)

```

The restricted model assumes that the impacts of being male or being very happy on log odds of being depressed are independent from one another. 

Alpha represents the log odds of being depressed for someone who is neither male nor very happy, and is `{r} round(rm_weight$coefficients[1],2)`.

Beta 1 represents the difference in log odds of being depressed for someone male compared to someone who is not, and is `{r} round(rm_weight$coefficients[2],2)`.

Beta 2 represents the difference in log odds of being depressed for someone who is very happy compared to someone who is not, and is `{r} round(rm_weight$coefficients[3],2)`.


## Comparing Saturated and Restricted Model

```{r}

anova(sm_depress, rm_depress, test = "Chisq")

```
The anova does not yield a chi-square value under .05, which means we should use the restricted model as the saturated model does not predict values with significantly higher likelihoods compared to it.


# Poisson Regression #1

The analysis will be for hours to watch tv by sex and happiness.

```{r}

tv <- gss2022 |> 
  select(sex, happy, tvhours) |> # get variables
  drop_na() |> 
  mutate(male = if_else(sex == 1, 1, 0)) |> 
  mutate(sex_label = if_else(sex == 1, "Male", "Female")) |> 
  mutate(veryhappy = if_else(happy == 1, 1, 0)) |> 
  mutate(veryhappy_label = if_else(happy == 1, "Very Happy", "Not Very Happy"))

tv_table <- tv |> 
  group_by(sex_label, veryhappy_label) |> 
  summarize(log_mean = round(log(mean(tvhours)),2))

tv_table

```

## Saturated Model by Hand

```{r}

tv_alpha = log(sqldf('SELECT AVG(tvhours) FROM tv WHERE male == 0 AND veryhappy == 0')) #tired of wrangling dplyr to do what I want so relying on my trusty SQL

tv_b1 = log(sqldf('SELECT AVG(tvhours) FROM tv WHERE male == 0 AND veryhappy == 1')) - tv_alpha

tv_b2 = log(sqldf('SELECT AVG(tvhours) FROM tv WHERE male == 1 AND veryhappy == 0')) -tv_alpha

tv_b3 = log(sqldf('SELECT AVG(tvhours) FROM tv WHERE male == 1 AND veryhappy == 1')) - tv_b1 - tv_b2 - tv_alpha

```

Alpha represents the log mean number of hours spent watching tv when male is 0 (i.e., respondent is female) and veryhappy is 0 (i.e., respondent is not very happy), and it is `{r} round(tv_alpha, 2)`. 

Beta 1 is where male is 0 and veryhappy is 1 (i.e., respondent is very happy), and it is `{r} round(tv_b1, 2)`; it represents the difference in log mean number of hours spent watching tv for a female who is very happy compared to a female who is not very happy.

Beta 2 is where male is 1 (i.e., respondent is male) and veryhappy is 0, and it is `{r} round(tv_b2, 2)`; it represents the difference in log mean number of hours spent watching tv for a male who is not very happy compared to a female who is not very happy.

Beta 3 is where male is 1 and veryhappy is 1, and it is `{r} round(tv_b3, 2)`. It represents the additional difference (in addition to beta 1 and beta 2) in log mean number of hours spent watching tv for a male who is very happy compared to a woman who is not very happy.

## Saturated Model by Computer

```{r}

sm_tv = glm(tvhours ~ male * veryhappy,
            data = tv,
            family = poisson(link = "log"))

summary(sm_tv)

```

## Restricted Model by Computer

```{r}

rm_tv = glm(tvhours ~ male + veryhappy,
            data = tv,
            family = poisson(link = "log"))

summary(rm_tv)

```
The restricted model assumes that the impacts of being male or being very happy on log mean number of hours spent watching tv are independent from one another. 

Alpha represents the log mean number of hours spent watching tv for someone who is neither male nor very happy, and is `{r} round(rm_tv$coefficients[1],2)`.

Beta 1 represents the difference in log mean number of hours spent watching tv for someone male compared to someone who is not, and is `{r} round(rm_tv$coefficients[2],2)`.

Beta 2 represents the difference in log mean number of hours spent watching tv for someone who is very happy compared to someone who is not, and is `{r} round(rm_tv$coefficients[3],2)`.


## Comparing Saturated and Restricted Model

```{r}

anova(sm_tv, rm_tv, test = "Chisq")

```
The anova does not yield a chi-square value under .05, which means we should use the restricted model as the saturated model does not predict values with significantly higher likelihoods compared to it.

# Poisson Regression #2

The analysis will be for number of siblings by sex and happiness.

```{r}

siblings <- gss2022 |> 
  select(sex, happy, sibs) |> # get variables
  drop_na() |> 
  mutate(male = if_else(sex == 1, 1, 0)) |> 
  mutate(sex_label = if_else(sex == 1, "Male", "Female")) |> 
  mutate(veryhappy = if_else(happy == 1, 1, 0)) |> 
  mutate(veryhappy_label = if_else(happy == 1, "Very Happy", "Not Very Happy"))

siblings_table <- siblings |> 
  group_by(sex_label, veryhappy_label) |> 
  summarize(log_mean = round(log(mean(sibs)),2))

siblings_table

```

## Saturated Model by Hand

```{r}

siblings_alpha = log(sqldf('SELECT AVG(sibs) FROM siblings WHERE male == 0 AND veryhappy == 0')) #tired of wrangling dplyr to do what I want so relying on my trusty SQL

siblings_b1 = log(sqldf('SELECT AVG(sibs) FROM siblings WHERE male == 0 AND veryhappy == 1')) - siblings_alpha

siblings_b2 = log(sqldf('SELECT AVG(sibs) FROM siblings WHERE male == 1 AND veryhappy == 0')) -siblings_alpha

siblings_b3 = log(sqldf('SELECT AVG(sibs) FROM siblings WHERE male == 1 AND veryhappy == 1')) - siblings_b1 - siblings_b2 - siblings_alpha

```

Alpha represents the log mean number of siblings when male is 0 (i.e., respondent is female) and veryhappy is 0 (i.e., respondent is not very happy), and it is `{r} round(siblings_alpha, 2)`. 

Beta 1 is where male is 0 and veryhappy is 1 (i.e., respondent is very happy), and it is `{r} round(siblings_b1, 2)`; it represents the difference in log mean number of siblings for a female who is very happy compared to a female who is not very happy.

Beta 2 is where male is 1 (i.e., respondent is male) and veryhappy is 0, and it is `{r} round(siblings_b2, 2)`; it represents the difference in log mean number of siblings for a male who is not very happy compared to a female who is not very happy.

Beta 3 is where male is 1 and veryhappy is 1, and it is `{r} round(siblings_b3, 2)`. It represents the additional difference (in addition to beta 1 and beta 2) in log mean number of siblings for a male who is very happy compared to a woman who is not very happy.

## Saturated Model by Computer

```{r}

sm_siblings = glm(sibs ~ male * veryhappy,
            data = siblings,
            family = poisson(link = "log"))

summary(sm_siblings)

```

## Restricted Model by Computer

```{r}

rm_siblings = glm(sibs ~ male + veryhappy,
            data = siblings,
            family = poisson(link = "log"))

summary(rm_siblings)

```
The restricted model assumes that the impacts of being male or being very happy on log mean number of siblings are independent from one another. 

Alpha represents the log mean number of siblings for someone who is neither male nor very happy, and is `{r} round(rm_siblings$coefficients[1],2)`.

Beta 1 represents the difference in log mean number of siblings for someone male compared to someone who is not, and is `{r} round(rm_siblings$coefficients[2],2)`.

Beta 2 represents the difference in log mean number of siblings for someone who is very happy compared to someone who is not, and is `{r} round(rm_siblings$coefficients[3],2)`.


## Comparing Saturated and Restricted Model

```{r}

anova(sm_siblings, rm_siblings, test = "Chisq")

```
The anova does  yield a chi-square value under .05, which means we should use the saturated model as the saturated model does  predict values with significantly higher likelihoods compared to the restricted model.
